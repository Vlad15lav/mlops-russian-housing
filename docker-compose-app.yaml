version: '3.7'

services:  
  # Сервис модели MLFlow
  model_service:
    container_name: model_service
    image: $REGISTRY_URL/dev/model_service:$CI_COMMIT_SHA
    restart: on-failure:3
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
    command: >
      uvicorn server:app --host 0.0.0.0 --port 80
    ports:
      - "8088:80"
    networks:
      - minio_net
      - app_net

  # Web сервис Streamlit
  web_app:
    container_name: web_app
    build: ./docker/web_app
    image: web_app
    environment:
      MODEL_API_URL: http://model_service:80
    command: >
      streamlit run web.py --server.port 8501
    ports:
      - "8501:8501"
    networks:
      - app_net
    depends_on:
      - model_service

  # Мониторинг сервис
  prometheus:
    container_name: dev_prometheus
    image: prom/prometheus:v2.51.2
    restart: unless-stopped
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # Сервис визуализации метрик
  grafana:
    container_name: dev_grafana
    image: grafana/grafana:10.4.2
    restart: unless-stopped
    hostname: grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./monitoring/config.monitoring

networks:
  minio_net:
    name: minio_net
    driver: bridge
  app_net:
    name: app_net
    driver: bridge