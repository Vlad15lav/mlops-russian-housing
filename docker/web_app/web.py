import os
import requests
import json
import streamlit as st

from datetime import datetime

st.set_page_config(
        page_title="Houses Price Prediction",
        page_icon="üèôÔ∏è"
    )

QUARY_FIELDS = (
    "city_name",
    "room_count",
    "total_square",
    "square_coock",
    "square_rooms",
    "repair_type",
    "home_type",
    "year_build",
    "max_floors"
)


def main():
    st.title('–£–∑–Ω–∞–π —Ü–µ–Ω—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏üè°')
    st.text('–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∂–∏–ª—å—è –∏ —É–∑–Ω–∞–π—Ç–µ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Ü–µ–Ω—É:')

    # –ë–ª–æ–∫ –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    col1, col2 = st.columns(2)

    with col1:
        city_name = st.selectbox(
            '–í–∞—à –≥–æ—Ä–æ–¥:',
            ('–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ö–∞–∑–∞–Ω—å')
        )
        repair_type = st.selectbox(
            '–¢–∏–ø —Ä–µ–º–æ–Ω—Ç–∞:',
            (
                '–ï–≤—Ä–æ', '–ö–æ—Å–º–µ—Ç–∏—á–µ—Å–∫–∏–π',
                '–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–∏–π', '–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ–º–æ–Ω—Ç'
            )
        )
        home_type = st.selectbox(
            '–¢–∏–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:',
            (
                '–ü–∞–Ω–µ–ª—å–Ω—ã–π', '–ö–∏—Ä–ø–∏—á–Ω—ã–π', '–ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π',
                '–ú–æ–Ω–æ–ª–∏—Ç–Ω–æ-–ö–∏—Ä–ø–∏—á–Ω—ã–π', '–ë–ª–æ—á–Ω—ã–π'
            )
        )
        max_floors = st.number_input(
            '–≠—Ç–∞–∂–µ–π –≤ –¥–æ–º–µ:',
            min_value=1, max_value=45,
            value=16
        )
        year_build = st.number_input(
            '–ì–æ–¥ –ø–æ—Å—Ç—Ä–æ–π–∫–∏:',
            min_value=1900, max_value=datetime.now().year,
            value=1976
        )

    with col2:
        room_count = st.number_input(
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:',
            min_value=1, max_value=6,
            value=3, step=1
        )
        total_square = st.number_input(
            '–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å:',
            min_value=10.0, max_value=200.0,
            value=75.0
        )
        square_coock = st.number_input(
            '–ü–ª–æ—â–∞–¥—å –∫—É—Ö–Ω–∏:',
            min_value=5.0, max_value=40.0,
            value=10.2
        )
        square_rooms = st.number_input(
            '–ñ–∏–ª–∞—è –ø–ª–æ—â–∞–¥—å:',
            min_value=5.0, max_value=90.0,
            value=44.0
        )

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
        values = [
            city_name,
            room_count,
            total_square,
            square_coock,
            square_rooms,
            repair_type,
            home_type,
            year_build,
            max_floors
        ]
        data_params = dict(zip(QUARY_FIELDS, values))

        try:
            response = requests.post(
                url=f'{os.getenv("MODEL_API_URL")}/predict',
                headers={
                    'accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                data=json.dumps(data_params)
            )

            if response.status_code == 200:
                response_json = response.json()
                price = int(response_json['0'] * 1_000_000)

                price_str = "{:,}".format(price).replace(',', ' ')
                st.write(f"–û—Ü–µ–Ω–∫–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏: {price_str} —Ä—É–±–ª–µ–π!üí∏")
            else:
                st.title("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!üòî")
        except requests.exceptions.ConnectionError:
            st.title("–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!üòî")


if __name__ == '__main__':
    main()
