image: python:3.11

cache:
  key:
    files:
      - .gitlab-ci.yml
    prefix: ${CI_JOB_NAME}
  paths:
    - .cache/pip
    - env/

variables:
  REGISTRY_URL: "registry.gitlab.com/vlad15lav/mlops-russian-housing"

stages:
  - linter
  - pytest
  - data-test
  - build
  - deploy

.create_environment:
  before_script:
    - python --version
    - python -m venv ./env
    - ./env/Scripts/activate

linter_job:
  extends: .create_environment
  stage: linter
  tags:
    - test
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
    - changes:
      - /*.py
  script:
    - echo "Starting linters..."
    - pip install flake8
    - flake8 src test dags docker

data_quality_job:
  extends: .create_environment
  stage: pytest
  tags:
    - test
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
    - changes:
      - dvc.lock
  script:
    - echo "Starting pytest..."
    - pip install -r requirements.txt
    - dvc pull
    - pytest ./test

data_pipline_job:
  extends: .create_environment
  stage: data-test
  tags:
    - data
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && $CI_PIPELINE_SOURCE != "merge_request_event"'
    - changes:
      - dvc.lock
      - test/*
  script:
    - echo "Starting DVC check..."
    - pip install -r requirements.txt
    - dvc pull
    - dvc repro

build_job:
  stage: build
  tags: 
    - deploy
  only:
    - master
    - changes:
      - dvc.lock
      - docker-compose-app.yaml
      - docker/*
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo $CI_COMMIT_SHA
    - docker build -t $REGISTRY_URL/dev/model_service:$CI_COMMIT_SHA ./docker/model_service/
    - docker push "$REGISTRY_URL/dev/model_service:$CI_COMMIT_SHA"

deploy_job:
  stage: deploy
  tags:
    - deploy
  only:
    - master
    - changes:
      - dvc.lock
      - docker-compose-app.yaml
      - docker/*
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo $CI_COMMIT_SHA
    - docker rm $(docker stop $(docker ps -a -q --filter name=model_service)); if (-not $?) {cd .}
    - docker-compose  -f docker-compose-app.yaml up model_service -d
